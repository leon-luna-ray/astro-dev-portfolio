---
import { fetchProject, fetchLanguages } from '../../lib/api';

import BarGraph from '../../components/BarGraph.vue';
import DetailHeader from '../../components/DetailHeader.vue';
import PageLayout from '../../layouts/PageLayout.astro';
import ProjectInfo from '../../components/ProjectInfo.vue';
import PortableText from '../../components/PortableText.vue';
import TechList from '../../components/TechList.vue';
import TagGrid from '../../components/TagGrid.vue';
import ThumbnailLinks from '../../components/ThumbnailLinks.vue';

import type { Language } from '../../interfaces/Language';

const project = await fetchProject(Astro.params.slug || '');

if (!project) {
    return new Response(null, {
        status: 404,
        statusText: 'Not found',
    });
}

let languages: Language[] = [];

if (project?.repositorySlug) {
    const fetchedLanguages = await fetchLanguages(project.repositorySlug);
    languages = fetchedLanguages;
}

---

<PageLayout title={project.title}>
    <DetailHeader
        title={project.title}
        image={project.mainImage}
        intro={project.intro}
        launchUrl={project.url}
        codeUrl={project.repository}
        isFeatured={project.featured}
    />
    <div class='project-details'>
        <div class='data'>
            <div class='top'>
                <ProjectInfo data={project} />
                <div class='description'>
                    <h2 class='title'>Description</h2>
                    <PortableText data={project.description} />
                </div>
                {
                    project?.relatedProjects?.length > 0 && (
                        <div class='related-projects'>
                            <h2 class='title'>Related Projects</h2>
                            <ThumbnailLinks data={project.relatedProjects} />
                        </div>
                    )
                }
            </div>

        </div>
        <div class='sidebar flex flex-col gap-y-[3.125rem] justify-between'>
            <div class='top flex-col gap-y-[3.125rem]'>
                {
                    languages.length > 0 && (
                        <div class='languages'>
                            <h2 class='title'>Languages</h2>
                            <BarGraph data={languages} />
                        </div>
                    )
                }
                <TechList
                    client:load
                    title='Technologies'
                    items={project.technologies}
                />
            </div>
            <TagGrid tags={project.tags} title='tags' />
        </div>
    </div>
</PageLayout>
